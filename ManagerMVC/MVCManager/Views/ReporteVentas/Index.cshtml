@model List<ReporteventasModel>

@{
    ViewBag.Title = "Reporte";
}

<div class="container mx-auto p-5">
    <div class="bg-white shadow-md rounded-md overflow-hidden">
        <div class="p-6">
            <h2 class="text-2xl font-bold mb-5">Reporte de Ventas</h2>

            <div class="flex flex-wrap -mx-2 mb-4">
                <!-- Combobox Cliente -->
                <div class="px-2 w-full md:w-1/6 mb-4">
                    <label for="clienteCombobox" class="block text-sm font-medium text-gray-600">Cliente:</label>
                    <select id="clienteCombobox" name="cliente" class="mt-1 p-2 rounded-md border shadow-sm w-full">
                        <option value="0">Cliente Genérico</option>
                        @foreach (var cliente in ViewBag.Cliente)
                        {
                            <option value="@cliente.Value">@cliente.Text</option>
                        }
                    </select>
                </div>

                <!-- Combobox Empresa Transporte -->
                <div class="px-2 w-full md:w-1/6 mb-4">
                    <label for="transporteCombobox" class="block text-sm font-medium text-gray-600">Empresa Transporte:</label>
                    <select id="transporteCombobox" name="transporte" class="mt-1 p-2 rounded-md border shadow-sm w-full">
                        <option value="0">No transporte</option>
                        @foreach (var transporte in ViewBag.TransDocumentos)
                        {
                            <option value="@transporte.Value">@transporte.Text</option>
                        }
                    </select>
                </div>

                <!-- Fecha Inicio -->
                <div class="px-2 w-full md:w-1/6 mb-4">
                    <label for="fechaInicio" class="block text-sm font-medium text-gray-600">Fecha Inicio:</label>
                    <input type="date" id="fechaInicio" class="mt-1 p-2 rounded-md border shadow-sm w-full">
                </div>

                <!-- Fecha Fin -->
                <div class="px-2 w-full md:w-1/6 mb-4">
                    <label for="fechaFin" class="block text-sm font-medium text-gray-600">Fecha Fin:</label>
                    <input type="date" id="fechaFin" class="mt-1 p-2 rounded-md border shadow-sm w-full">
                </div>
            </div>
            <div class="flex flex-wrap -mx-2 mb-4">
                <!-- Departamento -->
                <div class="px-2 w-full md:w-1/6 mb-4">
                    <label for="departamentoCombobox" class="block text-sm font-medium text-gray-600">Destino (Departamento):</label>
                    <select id="departamentoCombobox" class="mt-1 p-2 rounded-md border border-green-300 shadow-sm w-full">
                        <option value="">Seleccione un Departamento</option>
                        @foreach (var departamento in ViewBag.Departamentos)
                        {
                            <option value="@departamento">@departamento</option>
                        }
                    </select>
                </div>

                <!-- Provincia -->
                <div class="px-2 w-full md:w-1/6 mb-4">
                    <label for="provinciaCombobox" class="block text-sm font-medium text-gray-600">Destino (Provincia):</label>
                    <select id="provinciaCombobox" class="mt-1 p-2 rounded-md border border-green-300 shadow-sm w-full" disabled>
                        <option value="">Seleccione una Provincia</option>
                    </select>
                </div>

                <!-- Distrito -->
                <div class="px-2 w-full md:w-1/6 mb-4">
                    <label for="distritoCombobox" class="block text-sm font-medium text-gray-600">Destino (Distrito):</label>
                    <select id="distritoCombobox" class="mt-1 p-2 rounded-md border border-green-300 shadow-sm w-full" disabled>
                        <option value="">Seleccione un Distrito</option>
                    </select>
                </div>
            </div>

            <div class="px-2 w-full md:w-1/6 mb-4">
                <!-- Botón Filtrar -->
                <button onclick="filtrarVentas()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded mt-6 md:mt-1">Filtrar</button>
            </div>
            <div class="px-2 w-full md:w-1/6 mb-4">

                <button onclick="descargarExcel()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
                    Descargar Excel
                </button>
            </div>
            <!-- Tabla de Ventas -->
            <div class="overflow-x-auto">
                <table class="min-w-full bg-white" id="ventasTable">
                    <thead>
                        <tr>
                            @*              <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">ID Venta</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">ID Cliente</th>*@
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Nombre Cliente</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Tipo Documento</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Número Documento</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Telefono</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Tipo de Pago</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Empresa Transporte</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Destino</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Monto Total</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Fecha de Venta</th>
                            <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Acciones</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var venta in Model)
                        {
                            <tr>
                                @*                  <td class="border-b border-gray-200 px-4 py-2">@venta.idVenta</td>
                            <td class="border-b border-gray-200 px-4 py-2 idCliente">@venta.idCliente</td>*@
                                <td class="border-b border-gray-200 px-4 py-2">@venta.nombres</td>
                                <td class="border-b border-gray-200 px-4 py-2">@venta.tipoDocumento</td>
                                <td class="border-b border-gray-200 px-4 py-2">@venta.numeroDocumento</td>
                                <td class="border-b border-gray-200 px-4 py-2">@venta.telefono</td>
                                <td class="border-b border-gray-200 px-4 py-2">@venta.tipoPago</td>
                                <td class="border-b border-gray-200 px-4 py-2">@venta.empresaTransporte</td>
                                <td class="border-b border-gray-200 px-4 py-2 destino">@venta.ubigeo</td> <!-- Asegúrate de actualizar esto con datos reales -->
                                <td class="border-b border-gray-200 px-4 py-2">@venta.total</td>
                                <td class="border-b border-gray-200 px-4 py-2 fechaVenta">@venta.fechaVenta</td>
                                <td style="display: none;">@venta.idEmpresa</td> <!-- Si necesitas esta información, asegúrate de que se corresponda con el dato correcto -->
                                <td class="border-b border-gray-200 px-4 py-2">
                                    <button onclick="abrirDetalleVenta(@venta.idVenta)" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-1 px-2 rounded">Ver Detalle</button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

        </div>
    </div>
</div>



<!-- Modal para detalles de venta -->
<div class="fixed z-10 inset-0 overflow-y-auto hidden" aria-labelledby="modal-detalle-venta" role="dialog" aria-modal="true" id="detalleVentaModal">
    <div class="flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <!-- Fondo semitransparente del modal -->
        <div class="fixed inset-0 transition-opacity" aria-hidden="true">
            <div class="absolute inset-0 bg-gray-500 opacity-75"></div>
        </div>
        <!-- Contenido del modal -->
        <div class="inline-block align-middle bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-2xl sm:w-full" role="dialog" aria-modal="true" aria-labelledby="modal-headline">
            <div class="bg-white p-5 sm:p-6">
                <div class="sm:flex sm:items-start">
                    <div class="text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-headline">Detalles de Venta</h3>
                        <div class="mt-2">
                            <p><strong>Id Venta Detalle:</strong> <span id="ventaId">123</span></p>
                            <p><strong>Fecha Venta:</strong> <span id="ventaFecha">01/01/2023</span></p>
                            <!-- Tabla para detalles de productos -->
                            <div class="overflow-x-auto mt-4">
                                <table class="min-w-full">
                                    <thead>
                                        <tr>
                                            <th class="border-b-2 border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Imagen</th>
                                            <th class="border-b-2 border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Producto</th>
                                            <th class="border-b-2 border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Calidad</th>
                                            <th class="border-b-2 border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Cantidad</th>
                                            <th class="border-b-2 border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Talla</th>
                                            <th class="border-b-2 border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Precio</th>
                                            <th class="border-b-2 border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Total</th>
                                        </tr>
                                    </thead>
                                    <tbody id="detalleVentaProductos">
                                    </tbody>

                                </table>
                            </div>
                            <!-- Resumen de calidad y cantidad -->
                            <!-- Primera tabla para Calidad y Cantidad Total con Tailwind CSS -->
                            <div class="mt-4">
                                <table class="min-w-full border-collapse">
                                    <thead>
                                        <tr>
                                            <th class="border-b border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Categoría</th>
                                            <th class="border-b border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Calidad</th>
                                            <th class="border-b border-gray-200 bg-gray-100 px-5 py-3 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Cantidad</th>
                                        </tr>
                                    </thead>
                                    <tbody id="detallesCalidadCantidad">
                                        <!-- Los detalles se llenarán aquí -->
                                    </tbody>
                                </table>
                            </div>

                            <!-- Segunda tabla para Venta Total y Cantidad Total con Tailwind CSS -->
                            <div class="mt-4">
                                <table class="min-w-full border-collapse">
                                    <tbody id="resumenVentaTotal">
                                        <!-- Los resúmenes se llenarán aquí -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <!-- Botones del modal -->
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm" onclick="cerrarDetalleVenta()">
                    Cerrar
                </button>
            </div>
        </div>
    </div>
</div>



<script>
    async function descargarExcel() {
        var idClienteSeleccionado = document.getElementById("clienteCombobox").value;
        var idTransporteSeleccionado = document.getElementById("transporteCombobox").value;
        var departamentoSeleccionado = document.getElementById("departamentoCombobox").value;
        var provinciaSeleccionada = document.getElementById("provinciaCombobox").value;
        var distritoSeleccionado = document.getElementById("distritoCombobox").value;
        var fechaInicio = document.getElementById("fechaInicio").value || "1900-01-01";
        var fechaFin = document.getElementById("fechaFin").value || "2050-12-31";

        var filtro = {
            idCliente: parseInt(idClienteSeleccionado) || 0,
            idEmpresaTranspte: parseInt(idTransporteSeleccionado) || 0,
            departamento: departamentoSeleccionado,
            provincia: provinciaSeleccionada,
            distrito: distritoSeleccionado,
            fechaInicio: fechaInicio,
            fechaFin: fechaFin
        };
        console.log(filtro);
        const response = await fetch('/ReporteVentas/DescargarReporteVentas', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify(filtro)
        });

        if (response.ok) {
            const blob = await response.blob();
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            // Formato de la fecha y hora actual: YYYYMMDD_HHMM
            const timestamp = new Date().toISOString().replace(/:\d+.\d+Z$/, '').replace(/T/, '_').replace(/:/g, '').replace(/-/g, '');
            a.download = `ReporteVentas_${timestamp}.xlsx`;
            a.href = url;
            document.body.appendChild(a);
            a.click();
            a.remove();
        } else {
            alert("Error en la descarga del archivo");
        }
    }





    function abrirDetalleVenta(idVenta) {
        document.getElementById("ventaId").textContent = idVenta;

        fetch(`/ReporteVentas/GetDetalleVenta?idVenta=${idVenta}`, {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json',
            }
        })
            .then(response => response.json())
            .then(data => {
                var tbodyDetalleProductos = document.getElementById("detalleVentaProductos");
                var tbodyDetallesCalidadCantidad = document.getElementById("detallesCalidadCantidad");
                var tbodyResumenVenta = document.getElementById("resumenVentaTotal");

                console.log("tbodyDetalleProductos", tbodyDetalleProductos);
                console.log("tbodyDetallesCalidadCantidad", tbodyDetallesCalidadCantidad);
                console.log("tbodyResumenVenta", tbodyResumenVenta);
                // Asegurarse de que los elementos existen
                if (!tbodyDetalleProductos || !tbodyDetallesCalidadCantidad || !tbodyResumenVenta) {
                    console.error("Algunos elementos del DOM no se encontraron");
                    return;
                }

                tbodyDetalleProductos.innerHTML = '';
                tbodyDetallesCalidadCantidad.innerHTML = '';
                tbodyResumenVenta.innerHTML = '';

                let cantidadTotal = 0;
                let ventaTotal = 0;
                let agrupacionCalidadCantidad = {};

                data.forEach(producto => {
                    // Llenar tbodyDetalleProductos
                    var row = `<tr>
                            <td class="border-b border-gray-200 px-5 py-3">
                                <img src="${producto.imagenCarpeta}/${producto.imagenNombre}" alt="Producto" class="h-10 w-10 rounded-full">
                            </td>
                            <td class="border-b border-gray-200 px-5 py-3">${producto.producto}</td>
                            <td class="border-b border-gray-200 px-5 py-3">${producto.calidad}</td>
                            <td class="border-b border-gray-200 px-5 py-3">${producto.cantidad}</td>
                            <td class="border-b border-gray-200 px-5 py-3">${producto.talla}</td>
                            <td class="border-b border-gray-200 px-5 py-3">${producto.precioUnitario}</td>
                            <td class="border-b border-gray-200 px-5 py-3">${producto.subtotal}</td>
                        </tr>`;
                    tbodyDetalleProductos.innerHTML += row;

                    cantidadTotal += parseInt(producto.cantidad);
                    ventaTotal += parseFloat(producto.subtotal);

                    // Agrupar por categoría y calidad
                    let clave = producto.categoria + '-' + producto.calidad;
                    if (!agrupacionCalidadCantidad[clave]) {
                        agrupacionCalidadCantidad[clave] = { categoria: producto.categoria, calidad: producto.calidad, cantidad: 0 };
                    }
                    agrupacionCalidadCantidad[clave].cantidad += parseInt(producto.cantidad);
                });

                // Llenar tbodyDetallesCalidadCantidad
                for (let clave in agrupacionCalidadCantidad) {
                    let item = agrupacionCalidadCantidad[clave];
                    var rowCalidadCantidad = `<tr>
                            <td class="border px-4 py-2">${item.categoria}</td>
                            <td class="border px-4 py-2">${item.calidad}</td>
                            <td class="border px-4 py-2">${item.cantidad}</td>
                        </tr>`;
                    tbodyDetallesCalidadCantidad.innerHTML += rowCalidadCantidad;
                }

                // Llenar tbodyResumenVenta
                tbodyResumenVenta.innerHTML += `<tr>
                        <td class="border px-4 py-2"><strong>Venta Total:</strong></td>
                        <td class="border px-4 py-2">${ventaTotal.toFixed(2)}</td>
                    </tr>`;
                tbodyResumenVenta.innerHTML += `<tr>
                        <td class="border px-4 py-2"><strong>Cantidad Total:</strong></td>
                        <td class="border px-4 py-2">${cantidadTotal}</td>
                    </tr>`;

                // Mostrar el modal
                document.getElementById("detalleVentaModal").classList.remove("hidden");
            })
            .catch(error => {
                console.error('There has been a problem with your fetch operation:', error);
            });
    }







    function cerrarDetalleVenta() {
        document.getElementById("detalleVentaModal").classList.add("hidden");
    }

    function filtrarVentas() {
        var idClienteSeleccionado = document.getElementById("clienteCombobox").value;
        var idTransporteSeleccionado = document.getElementById("transporteCombobox").value;
        var departamentoSeleccionado = document.getElementById("departamentoCombobox").value;
        var provinciaSeleccionada = document.getElementById("provinciaCombobox").value;
        var distritoSeleccionado = document.getElementById("distritoCombobox").value;
        var fechaInicio = document.getElementById("fechaInicio").value || "1900-01-01";
        var fechaFin = document.getElementById("fechaFin").value || "2050-12-31";

        var datosFiltro = {
            idCliente: parseInt(idClienteSeleccionado) || 0,
            idEmpresaTranspte: parseInt(idTransporteSeleccionado) || 0,
            departamento: departamentoSeleccionado,
            provincia: provinciaSeleccionada,
            distrito: distritoSeleccionado,
            fechaInicio: fechaInicio,
            fechaFin: fechaFin
        };
        console.log(datosFiltro);
        fetch('/ReporteVentas/GetVentasFiltro', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(datosFiltro)
        })
            .then(response => response.json())
            .then(data => {
                console.log("Filtro aplicado correctamente.", data);
                actualizarTablaVentas(data);
            })
            .catch(error => console.error('Error:', error));
    }
    function actualizarTablaVentas(datos) {
        var tabla = document.getElementById("ventasTable").getElementsByTagName("tbody")[0];
        tabla.innerHTML = ''; // Limpiar la tabla existente

        datos.forEach(venta => {
            var fila = tabla.insertRow();
            fila.insertCell(0).textContent = venta.idVenta;
            fila.insertCell(1).textContent = venta.idCliente;
            fila.insertCell(2).textContent = venta.nombres;
            fila.insertCell(3).textContent = venta.tipoPago;
            fila.insertCell(4).textContent = venta.empresaTransporte;
            fila.insertCell(5).textContent = venta.ubigeo;
            fila.insertCell(6).textContent = venta.total;
            fila.insertCell(7).textContent = venta.fechaVenta;

            // Agregar botón de acción o cualquier otra celda que necesites
            var celdaAcciones = fila.insertCell(8);
            var botonDetalle = document.createElement("button");
            botonDetalle.textContent = "Ver Detalle";
            botonDetalle.classList.add("bg-blue-500", "hover:bg-blue-700", "text-white", "font-bold", "py-1", "px-2", "rounded");
            botonDetalle.onclick = function() { abrirDetalleVenta(venta.idVenta); };
            celdaAcciones.appendChild(botonDetalle);
        });
    }



</script>
<script>
    var ubigeoData = @Html.Raw(Json.Serialize(ViewBag.Ubigeo));

    document.getElementById('departamentoCombobox').addEventListener('change', function() {
        var departamentoSeleccionado = this.value;
        actualizarProvincias(departamentoSeleccionado);
        // Limpiar y deshabilitar el combobox de distritos
        var distritoSelect = document.getElementById('distritoCombobox');
        distritoSelect.innerHTML = '<option value="">Seleccione un Distrito</option>';
        distritoSelect.disabled = true;
    });

    document.getElementById('provinciaCombobox').addEventListener('change', function() {
        var provinciaSeleccionada = this.value;
        var departamentoSeleccionado = document.getElementById('departamentoCombobox').value;
        actualizarDistritos(departamentoSeleccionado, provinciaSeleccionada);
    });

    function actualizarProvincias(departamento) {
        var provincias = ubigeoData.filter(function(ubigeo) {
            return ubigeo.departamento === departamento; // Asegúrate de que las propiedades coincidan con las de tu objeto ubigeo
        }).map(function(ubigeo) {
            return ubigeo.provincia;
        }).filter(function(value, index, self) {
            return self.indexOf(value) === index; // Eliminar duplicados
        });

        console.log("Provincias Filtradas:", provincias); // Verificar las provincias filtradas

        var provinciaSelect = document.getElementById('provinciaCombobox');
        provinciaSelect.innerHTML = '<option value="">Seleccione una Provincia</option>';
        provincias.forEach(function(provincia) {
            provinciaSelect.innerHTML += '<option value="' + provincia + '">' + provincia + '</option>';
        });
        provinciaSelect.disabled = provincias.length === 0;
    }

    function actualizarDistritos(departamento, provincia) {
        var distritos = ubigeoData.filter(function(ubigeo) {
            return ubigeo.departamento === departamento && ubigeo.provincia === provincia;
        }).map(function(ubigeo) {
            return ubigeo.distrito;
        });

        var distritoSelect = document.getElementById('distritoCombobox');
        distritoSelect.innerHTML = '<option value="">Seleccione un Distrito</option>';
        distritos.forEach(function(distrito) {
            distritoSelect.innerHTML += '<option value="' + distrito + '">' + distrito + '</option>';
        });
        distritoSelect.disabled = distritos.length === 0;
    }
</script>
<script>
    document.getElementById('transporteCombobox').addEventListener('change', function() {
        var seleccion = this.value;
        var contenedorUbigeo = document.getElementById('ubigeoContainer');

        if (seleccion !== "0") {
            contenedorUbigeo.classList.remove('hidden');
        } else {
            contenedorUbigeo.classList.add('hidden');
        }
    });



</script>