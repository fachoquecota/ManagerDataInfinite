@model List<TransporteModel>

@{
    ViewBag.Title = "Mantenimiento de Empresas de Transporte";
}

<div class="container mx-auto mt-10 p-5 max-w-2xl">
    <div class="p-6 bg-white shadow-md rounded-md">
        <h2 class="text-2xl font-bold mb-5">Mantenimiento de Empresas de Transporte</h2>

        <div class="mb-4 w-1/2">
            <input type="text" id="searchInput" placeholder="Buscar..." class="p-2 border rounded shadow appearance-none focus:outline-none focus:shadow-outline">
        </div>

        <div class="mb-4">
            <button onclick="openAddModal()" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">Agregar Empresa de Transporte</button>
        </div>

        <table class="min-w-full bg-white" id="transportesTable">
            <thead>
                <tr>
                    <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">ID</th>
                    <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Descripción</th>
                    <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Dirección</th>
                    <th class="py-2 px-4 border-b border-gray-200 bg-gray-100">Acciones</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var transporte in Model)
                {
                    <tr data-idEmpresaTransporte="@transporte.idEmpresaTranspte">
                        <td class="py-2 px-4 border-b border-gray-200">@transporte.idEmpresaTranspte</td>
                        <td class="py-2 px-4 border-b border-gray-200">@transporte.descripcion</td>
                        <td class="py-2 px-4 border-b border-gray-200">@transporte.direccion</td>
                        <td class="py-2 px-4 border-b border-gray-200">
                            <button onclick="openEditModal('@transporte.idEmpresaTranspte', '@Html.Raw(transporte.descripcion.Replace("'", "\\'"))', '@Html.Raw(transporte.direccion.Replace("'", "\\'"))')" class="bg-yellow-500 hover:bg-yellow-600 text-white font-bold py-1 px-4 rounded mr-2">Editar</button>
                            <button class="text-red-500 hover:text-red-700" onclick="openDeleteModal(@transporte.idEmpresaTranspte)">Eliminar</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="fixed z-10 inset-0 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true" id="editModal">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <!-- Modal Content -->
        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>
        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4">
                <div class="sm:flex sm:items-start">
                    <div class="mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left w-full">
                        <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title">
                            Editar Empresa de Transporte
                        </h3>
                        <div class="mt-2">
                            <input type="text" id="descripcionInput" class="shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline" placeholder="Descripción">
                        </div>
                        <div class="mt-2">
                            <input type="text" id="direccionInput" class="shadow appearance-none border rounded w-full py-2 px-3 leading-tight focus:outline-none focus:shadow-outline" placeholder="Dirección">
                        </div>
                    </div>
                </div>
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:flex-row-reverse">
                <button onclick="saveChanges()" class="bg-green-500 hover:bg-green-600 text-white font-bold py-1 px-4 rounded mt-2">
                    Guardar
                </button>
                <button type="button" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:mt-0 sm:ml-3 sm:w-auto sm:text-sm" onclick="closeModal()">
                    Cancelar
                </button>
            </div>
        </div>
    </div>
</div>

<div class="fixed z-10 inset-0 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true" id="deleteModal">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true"></div>

        <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

        <div class="inline-block align-bottom bg-white rounded-lg px-4 pt-5 pb-4 text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full sm:p-6">
            <div>
                <h3 class="text-lg leading-6 font-medium text-gray-900" id="modal-title-delete">
                    Confirmar Eliminación
                </h3>
                <div class="mt-2">
                    <p class="text-sm text-gray-500" id="deleteConfirmationText">
                        ¿Está seguro de que desea eliminar este registro? Esta acción no se puede deshacer.
                    </p>
                </div>
            </div>
            <div class="mt-5 sm:mt-6">
                <button type="button" onclick="confirmDelete()" class="w-full inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-red-600 text-base font-medium text-white hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 sm:text-sm">
                    Confirmar
                </button>
                <button type="button" onclick="closeDeleteModal()" class="mt-3 w-full inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm sm:mt-0 sm:ml-3">
                    Cancelar
                </button>
            </div>
        </div>
    </div>
</div>


<script>
    function closeModal() {
        // Obtén el modal por su ID y ocúltalo agregando la clase 'hidden'
        document.getElementById("editModal").classList.add("hidden");

        // Opcional: restablecer el contenido del modal a su estado original
        document.getElementById("descripcionInput").value = "";
        document.getElementById("direccionInput").value = "";

        // Si has estado usando una variable global para almacenar el ID actualmente en edición, restablécela
        currentEditingId = null;
        modalMode = "";

    }

    let currentEditingId = null; 

    function openEditModal(idEmpresaTransporte, descripcion, direccion) {
        currentEditingId = idEmpresaTransporte; 

        // Rellenar los campos del modal con los datos recibidos
        document.getElementById("descripcionInput").value = descripcion;
        document.getElementById("direccionInput").value = direccion;

        // Actualizar el título del modal con el ID de la empresa
        document.getElementById("modal-title").textContent = "Editar Empresa de Transporte - ID: " + idEmpresaTransporte;

        // Guardar el ID actualmente en edición en una variable global o de otro modo
        // para su uso posterior en la función saveChanges()
        window.currentEditingId = idEmpresaTransporte;

        // Mostrar el modal
        document.getElementById("editModal").classList.remove("hidden");
        modalMode = "edit";

    }
    function openAddModal() {
        // Limpia los campos de entrada para un nuevo registro
        document.getElementById("descripcionInput").value = "";
        document.getElementById("direccionInput").value = "";

        // Actualiza el título del modal para reflejar que se está añadiendo una nueva empresa de transporte
        document.getElementById("modal-title").textContent = "Agregar Nueva Empresa de Transporte";

        // Restablece cualquier ID que se haya almacenado para la edición
        currentEditingId = null; // Asumiendo que estás utilizando una variable global para almacenar el ID

        // Muestra el modal quitando la clase 'hidden'
        document.getElementById("editModal").classList.remove("hidden");
        modalMode = "add";

    }

    let modalMode = ""; // Puede ser "add" o "edit"

    function saveChanges() {
        // Código para guardar los cambios...
        if (modalMode === "add") {
            addNewTransporte();
        } else if (modalMode === "edit") {
            updateTransporte();
        }
    }

    function addNewTransporte() {
        const descripcion = document.getElementById("descripcionInput").value;
        const direccion = document.getElementById("direccionInput").value;

        fetch(`/Transporte/InsertTransporte?descripcion=${encodeURIComponent(descripcion)}&direccion=${encodeURIComponent(direccion)}`, {
            method: "POST"
        })
        .then(response => {
            if (response.ok) {
                // Mostrar un mensaje de éxito
                alert("Empresa de transporte agregada con éxito.");
                // Recargar la página para reflejar los cambios
                location.reload();
            } else {
                // Mostrar un mensaje de error si la respuesta no es exitosa
                alert("Error al agregar la empresa de transporte.");
            }
        })
        .catch(error => {
            // Manejar cualquier error que ocurra durante la llamada fetch
            console.error('Error:', error);
            alert("Error al agregar la empresa de transporte.");
        });
    }


    function updateTransporte() {
        const idEmpresaTransporte = currentEditingId; // Utilizar la variable global
        const descripcion = document.getElementById("descripcionInput").value;
        const direccion = document.getElementById("direccionInput").value;

        fetch(`/Transporte/UpdateTransporte?idEmpresaTransporte=${idEmpresaTransporte}&descripcion=${encodeURIComponent(descripcion)}&direccion=${encodeURIComponent(direccion)}`, {
            method: "PUT"
        })
        .then(response => {
            if (response.ok) {
                alert("Datos actualizados con éxito.");
                location.reload(); // Recargar la página para mostrar los cambios
            } else {
                alert("Error al actualizar los datos.");
            }
        })
        .catch(error => {
            console.error('Error:', error);
            alert("Error al actualizar los datos.");
        });
    }


    let idToDelete = 0;

    function openDeleteModal(idEmpresaTransporte) {
        idToDelete = idEmpresaTransporte;
        document.getElementById("deleteConfirmationText").textContent = "¿Está seguro de que desea eliminar la Empresa de Transporte con ID: " + idEmpresaTransporte + "? Esta acción no se puede deshacer.";
        document.getElementById("deleteModal").classList.remove("hidden");
    }

    function closeDeleteModal() {
        document.getElementById("deleteModal").classList.add("hidden");
        idToDelete = 0;
    }

    function confirmDelete() {
        if (idToDelete) {
            fetch(`/Transporte/DeleteTransporte?idEmpresaTransporte=${idToDelete}`, {
                method: "DELETE"
            })
            .then(response => {
                if (response.ok) {
                    alert("Empresa de transporte eliminada con éxito.");
                    location.reload();
                } else {
                    alert("Error al eliminar la empresa de transporte.");
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert("Error al eliminar la empresa de transporte.");
            });
        }
    }

    document.getElementById('searchInput').addEventListener('keyup', function () {
        let filter = this.value.toUpperCase();
        let rows = document.querySelector("table tbody").rows;

        for (let i = 0; i < rows.length; i++) {
            let cells = rows[i].querySelectorAll("td");
            let foundInRow = false;

            // Columnas para buscar: nombres (1), apellidos (2), numeroDocumento (4), razon social (5), correo (7)
            let searchColumns = [1];

            for (let j = 0; j < searchColumns.length; j++) {
                let colIndex = searchColumns[j];
                let col = cells[colIndex];
                if (col) {
                    let txtValue = col.textContent || col.innerText;
                    if (txtValue.toUpperCase().indexOf(filter) > -1) {
                        foundInRow = true;
                        break; // Si encuentra coincidencia, no necesita buscar en las demás columnas
                    }
                }
            }

            rows[i].style.display = foundInRow ? "" : "none";
        }
    });

</script>
